@model Product
<div class="text-center">
    <h1 class="display-4">Welcome</h1>
    <p>Learn about <a href="https://learn.microsoft.com/aspnet/core">building Web apps with ASP.NET Core</a>.</p>

    @* display dropdown menu *@
    <div class="text-center">
        <h2>Cascading Dropdown Demo </h2>

        <div class="row form-group p-4 border m-2">
            <div class="col-2">Category</div>
            <div class="col-4">
                <select asp-for="CategoryId" class="form-select" id="categoryId"
                asp-items="@ViewBag.categories">
                <option disabled selected>--Select Category</option>
            </select>
            </div>


             <div class="col-2">Product </div>
             <div class="col-4">
                 <select asp-for="Id" class="form-select" id="productId">
                </select>
            </div>
        </div>
    </div>
</div>

@* add JavaScript section *@ 
@section Scripts{
    <script>
        //whenever page is loaded we retrive that
        $(document).ready(function () {
            getProductByCategoryId();
        });

        //whenever catogery id is change we call tha getProductByCategoryId function
        $("#categoryId").change(function () {
            getProductByCategoryId();
        });

        //ajax call and save into the getProductByCategoryId variable
        var getProductByCategoryId = function ()
        {

            //ajax call in url first we enter method name and then controller name
          $.ajax({
                url: '@Url.Action("GetProductByCategoryId","Home")',
                type:'GET',
              data: {
                  //when we call then we pass any data, so we are passing id into the method
                    categoryId: $('#categoryId').val(),
              },

                success: function (data) { 

                  //first of all remove existing option in lst because we want only display product according
                  //to specific id
                  $('#productId').find('option').remove()


                     //receive json response back from the method
                  $(data).each(
                      //this is build in function index means 0,1,2,3 and item means product
                      function (index, item) {
                          //here we append the product
                          $('#productId').append('<option value="' + item.id + '">' + item.name + '</option>')

                      });
              }
          })
        }
    </script>
}
